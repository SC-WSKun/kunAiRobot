# DC_HOST: the IP of the server(using hostname may not be found)
# CLIENT_IMAGE_NAME | SERVER_IMAGE_NAME: ${dockerhub username}/${dockerhub repository}:${tag}

name: Docker Image CI

on:
  push:
    branches:
      - 'main'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push server
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.SERVER_IMAGE_NAME }}
      - name: Build and push client
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: true
          tags: ${{ secrets.CLIENT_IMAGE_NAME }}
      - name: ssh deploy
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        with:
          host: ${{ secrets.DC_HOST }}
          user: ${{ secrets.DC_USER }}
          pass: ${{ secrets.DC_PASS }}
          connect_timeout: 10s
          first_ssh: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker stop admin-server
            docker rm admin-server
            docker stop admin-client
            docker rm admin-client
            docker pull ${{ secrets.SERVER_IMAGE_NAME }}
            docker pull ${{ secrets.CLIENT_IMAGE_NAME }}
            docker run -p 7001:7001 -d --name admin-server ${{ secrets.SERVER_IMAGE_NAME }}
            docker run -p 80:80 -d --name admin-client ${{ secrets.CLIENT_IMAGE_NAME }}
